// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace dava_avukat_eslestirme_asistani.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250918084634_Fix_WorkingGroup_Relations")]
    partial class Fix_WorkingGroup_Relations
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Address")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attorney1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attorney2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Attorney3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AuthorList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CaseResponsible")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ClientReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ContactClient")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactClientId")
                        .HasColumnType("int");

                    b.Property<string>("ContactCounter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactCounterId")
                        .HasColumnType("int");

                    b.Property<string>("ContactCourt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactCourtHouseId")
                        .HasColumnType("int");

                    b.Property<string>("ContactCourtLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ContactIntermadiaryCompanyId")
                        .HasColumnType("int");

                    b.Property<int?>("ContactLocationCourtId")
                        .HasColumnType("int");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("County")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourtAuthorityReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreateBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileCaseId")
                        .HasColumnType("int");

                    b.Property<string>("FileCaseReferenceNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileCaseViewId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("FileCloseDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("FileOpenDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FileStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileStatusId")
                        .HasColumnType("int");

                    b.Property<string>("FileSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileSubjectId")
                        .HasColumnType("int");

                    b.Property<string>("FileType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FileTypeId")
                        .HasColumnType("int");

                    b.Property<string>("FileTypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FinanceContactAccountId")
                        .HasColumnType("int");

                    b.Property<int?>("GlobalSystemCustomerId")
                        .HasColumnType("int");

                    b.Property<string>("HardCopyLocation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("HardCopyLocationDesc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("HardCopyLocationId")
                        .HasColumnType("int");

                    b.Property<bool?>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsDemoRecord")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsOfficeFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsPrivateFile")
                        .HasColumnType("bit");

                    b.Property<bool?>("IsProposalFile")
                        .HasColumnType("bit");

                    b.Property<bool>("IsToBeInvoiced")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedGlobalUser")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LastModifiedGlobalUserId")
                        .HasColumnType("int");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OACasePartner")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrganizationEmployeeId")
                        .HasColumnType("int");

                    b.Property<string>("PrmCasePlaceofUseSubject")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrmNatureOfAssignment")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrmNatureOfAssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("PrmPriority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrmPriorityId")
                        .HasColumnType("int");

                    b.Property<string>("PrmStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("PrmStatusId")
                        .HasColumnType("int");

                    b.Property<string>("PrmStatusTypeValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReaderList")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("RowVersion")
                        .IsConcurrencyToken()
                        .ValueGeneratedOnAddOrUpdate()
                        .HasColumnType("rowversion");

                    b.Property<string>("SubjectMatterDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Supervisor")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TariffType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TariffTypeId")
                        .HasColumnType("int");

                    b.Property<int?>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.CaseLawyerMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChosenAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChosenBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LawyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CaseLawyerMatches");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Lawyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Languages")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrmEmployeeRecordType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("Lawyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Ankara",
                            Education = "Ankara Üniversitesi Hukuk Fakültesi",
                            Email = "berat.calik@gun.av.tr",
                            FullName = "Av. Berat Çalık",
                            IsActive = true,
                            IsDeleted = false,
                            Languages = "Türkçe, İngilizce",
                            Phone = "05367750225",
                            PrmEmployeeRecordType = "Associate",
                            StartDate = new DateTime(2020, 9, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Avukat",
                            WorkingGroupId = 1
                        });
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkingGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Patent işleri",
                            GroupName = "PATENT"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Araştırma ve inceleme işleri",
                            GroupName = "ARAŞTIRMA"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Taklit ürünlere karşı mücadele",
                            GroupName = "FM TAKLİTLE MÜCADELE"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Marka, telif ve tasarım hukuku",
                            GroupName = "MARKA, TELİF, TASARIM"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Şirketler hukuku ve sözleşmeler",
                            GroupName = "ŞİRKETLER ve SÖZLEŞMELER"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Tescil işlemleri",
                            GroupName = "TESCİL"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 9, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Ticari davalar",
                            GroupName = "TİCARİ DAVA"
                        });
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Case", b =>
                {
                    b.HasOne("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany("Cases")
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("WorkingGroup");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Lawyer", b =>
                {
                    b.HasOne("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany("Lawyers")
                        .HasForeignKey("WorkingGroupId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.Navigation("WorkingGroup");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", b =>
                {
                    b.Navigation("Cases");

                    b.Navigation("Lawyers");
                });
#pragma warning restore 612, 618
        }
    }
}
