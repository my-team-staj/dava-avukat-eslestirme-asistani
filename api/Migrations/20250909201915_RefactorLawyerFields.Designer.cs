// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace dava_avukat_eslestirme_asistani.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250909201915_RefactorLawyerFields")]
    partial class RefactorLawyerFields
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Case", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EstimatedDurationInDays")
                        .HasColumnType("int");

                    b.Property<DateTime>("FiledDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Language")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RequiredExperienceLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("RequiresProBono")
                        .HasColumnType("bit");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UrgencyLevel")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("Cases");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.CaseLawyerMatch", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CaseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("ChosenAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ChosenBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LawyerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CaseLawyerMatches");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Lawyer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("City")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("DeletedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Education")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Languages")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Phone")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PrmEmployeeRecordType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WorkGroup")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("WorkingGroupId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WorkingGroupId");

                    b.ToTable("Lawyers");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            City = "Ankara",
                            Education = "Ankara Üniversitesi Hukuk Fakültesi",
                            Email = "berat.calik@gun.av.tr",
                            FullName = "Av. Berat Çalık",
                            IsActive = true,
                            IsDeleted = false,
                            Languages = "Türkçe, İngilizce",
                            Phone = "05367750225",
                            PrmEmployeeRecordType = "FullTime",
                            StartDate = new DateTime(2020, 1, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Kıdemli Avukat",
                            WorkGroup = "TİCARİ DAVA",
                            WorkingGroupId = 1
                        });
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("GroupDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GroupName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("WorkingGroups");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Ceza davaları için uzman ekip",
                            GroupName = "Ceza Grubu"
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Boşanma, velayet ve nafaka gibi konularda uzmanlık",
                            GroupName = "Aile Hukuku Grubu"
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Şirketler ve ticari uyuşmazlıklar",
                            GroupName = "Ticaret Hukuku Grubu"
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "İşçi-işveren ilişkileri, tazminat davaları",
                            GroupName = "İş Hukuku Grubu"
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Tapu, kat mülkiyeti ve kira sözleşmeleri",
                            GroupName = "Gayrimenkul ve Kira Grubu"
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Tüketici uyuşmazlıkları, ayıplı mal davaları",
                            GroupName = "Tüketici Hakları Grubu"
                        },
                        new
                        {
                            Id = 7,
                            CreatedAt = new DateTime(2025, 8, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            GroupDescription = "Borç tahsilatı, icra ve konkordato işlemleri",
                            GroupName = "İcra ve İflas Grubu"
                        });
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Case", b =>
                {
                    b.HasOne("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany("Cases")
                        .HasForeignKey("WorkingGroupId");

                    b.Navigation("WorkingGroup");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.Lawyer", b =>
                {
                    b.HasOne("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", "WorkingGroup")
                        .WithMany("Lawyers")
                        .HasForeignKey("WorkingGroupId");

                    b.Navigation("WorkingGroup");
                });

            modelBuilder.Entity("dava_avukat_eslestirme_asistani.Entities.WorkingGroup", b =>
                {
                    b.Navigation("Cases");

                    b.Navigation("Lawyers");
                });
#pragma warning restore 612, 618
        }
    }
}
